{"ast":null,"code":"import mockBookings from '../mocks/bookings.json';\nimport { mapApiBookingToBooking } from './mappers/bookingMappers.js';\nimport DEV_CONFIG from '../config/dev.js';\n\n/**\r\n * Environment flag to use mocks instead of API\r\n */\nconst USE_MOCKS = process.env.REACT_APP_USE_MOCKS === 'true' || !DEV_CONFIG.ENABLE_AUTH;\n\n/**\r\n * API base URL from environment\r\n */\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n/**\r\n * Fetches bookings from API or returns mock data\r\n * @param {AbortSignal} [signal] - AbortController signal for request cancellation\r\n * @returns {Promise<import('../types/booking.js').Booking[]>}\r\n */\nexport async function getBookings(signal) {\n  // If mocks are enabled or auth is disabled, return mock data\n  if (USE_MOCKS) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const mappedBookings = mockBookings.map((booking, index) => mapApiBookingToBooking(booking, index));\n        resolve(mappedBookings);\n      }, 500); // Simulate network delay\n    });\n  }\n  try {\n    var _apiBookings$data;\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_BASE_URL}/bookings`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n        'Content-Type': 'application/json'\n      },\n      signal\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const apiBookings = await response.json();\n\n    // Map API response to UI model\n    return ((_apiBookings$data = apiBookings.data) === null || _apiBookings$data === void 0 ? void 0 : _apiBookings$data.map((booking, index) => mapApiBookingToBooking(booking, index))) || [];\n  } catch (error) {\n    // On any error (network, 401, 500, etc.), fall back to mocks if available\n    if (error.name === 'AbortError') {\n      throw error; // Don't handle aborted requests\n    }\n    console.warn('API call failed, falling back to mock data:', error.message);\n\n    // Return mock data as fallback\n    return mockBookings.map((booking, index) => mapApiBookingToBooking(booking, index));\n  }\n}","map":{"version":3,"names":["mockBookings","mapApiBookingToBooking","DEV_CONFIG","USE_MOCKS","process","env","REACT_APP_USE_MOCKS","ENABLE_AUTH","API_BASE_URL","REACT_APP_API_URL","getBookings","signal","Promise","resolve","setTimeout","mappedBookings","map","booking","index","_apiBookings$data","token","localStorage","getItem","response","fetch","headers","ok","Error","status","apiBookings","json","data","error","name","console","warn","message"],"sources":["C:/Users/gilbe/Projects/AutoSaaz/autosaaz-garage-app/client/src/services/bookings.service.js"],"sourcesContent":["import mockBookings from '../mocks/bookings.json';\r\nimport { mapApiBookingToBooking } from './mappers/bookingMappers.js';\r\nimport DEV_CONFIG from '../config/dev.js';\r\n\r\n/**\r\n * Environment flag to use mocks instead of API\r\n */\r\nconst USE_MOCKS = process.env.REACT_APP_USE_MOCKS === 'true' || !DEV_CONFIG.ENABLE_AUTH;\r\n\r\n/**\r\n * API base URL from environment\r\n */\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n/**\r\n * Fetches bookings from API or returns mock data\r\n * @param {AbortSignal} [signal] - AbortController signal for request cancellation\r\n * @returns {Promise<import('../types/booking.js').Booking[]>}\r\n */\r\nexport async function getBookings(signal) {\r\n  // If mocks are enabled or auth is disabled, return mock data\r\n  if (USE_MOCKS) {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        const mappedBookings = mockBookings.map((booking, index) => \r\n          mapApiBookingToBooking(booking, index)\r\n        );\r\n        resolve(mappedBookings);\r\n      }, 500); // Simulate network delay\r\n    });\r\n  }\r\n\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_BASE_URL}/bookings`, {\r\n      headers: {\r\n        'Authorization': token ? `Bearer ${token}` : '',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      signal\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const apiBookings = await response.json();\r\n    \r\n    // Map API response to UI model\r\n    return apiBookings.data?.map((booking, index) => \r\n      mapApiBookingToBooking(booking, index)\r\n    ) || [];\r\n\r\n  } catch (error) {\r\n    // On any error (network, 401, 500, etc.), fall back to mocks if available\r\n    if (error.name === 'AbortError') {\r\n      throw error; // Don't handle aborted requests\r\n    }\r\n    \r\n    console.warn('API call failed, falling back to mock data:', error.message);\r\n    \r\n    // Return mock data as fallback\r\n    return mockBookings.map((booking, index) => \r\n      mapApiBookingToBooking(booking, index)\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,wBAAwB;AACjD,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,OAAOC,UAAU,MAAM,kBAAkB;;AAEzC;AACA;AACA;AACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,KAAK,MAAM,IAAI,CAACJ,UAAU,CAACK,WAAW;;AAEvF;AACA;AACA;AACA,MAAMC,YAAY,GAAGJ,OAAO,CAACC,GAAG,CAACI,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,WAAWA,CAACC,MAAM,EAAE;EACxC;EACA,IAAIR,SAAS,EAAE;IACb,OAAO,IAAIS,OAAO,CAACC,OAAO,IAAI;MAC5BC,UAAU,CAAC,MAAM;QACf,MAAMC,cAAc,GAAGf,YAAY,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KACrDjB,sBAAsB,CAACgB,OAAO,EAAEC,KAAK,CACvC,CAAC;QACDL,OAAO,CAACE,cAAc,CAAC;MACzB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;EAEA,IAAI;IAAA,IAAAI,iBAAA;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,YAAY,WAAW,EAAE;MACvDiB,OAAO,EAAE;QACP,eAAe,EAAEL,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG,EAAE;QAC/C,cAAc,EAAE;MAClB,CAAC;MACDT;IACF,CAAC,CAAC;IAEF,IAAI,CAACY,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,WAAW,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;;IAEzC;IACA,OAAO,EAAAX,iBAAA,GAAAU,WAAW,CAACE,IAAI,cAAAZ,iBAAA,uBAAhBA,iBAAA,CAAkBH,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAC1CjB,sBAAsB,CAACgB,OAAO,EAAEC,KAAK,CACvC,CAAC,KAAI,EAAE;EAET,CAAC,CAAC,OAAOc,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;MAC/B,MAAMD,KAAK,CAAC,CAAC;IACf;IAEAE,OAAO,CAACC,IAAI,CAAC,6CAA6C,EAAEH,KAAK,CAACI,OAAO,CAAC;;IAE1E;IACA,OAAOpC,YAAY,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KACrCjB,sBAAsB,CAACgB,OAAO,EAAEC,KAAK,CACvC,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}