{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilbe\\\\Downloads\\\\Garage\\\\AutoSaaz-Garage-Client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DEV_CONFIG from '../config/dev';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport { AuthContext };\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        // If auth is disabled in dev config, use mock user\n        if (!DEV_CONFIG.ENABLE_AUTH) {\n          setUser(DEV_CONFIG.MOCK_USER);\n          setLoading(false);\n          return;\n        }\n        const token = localStorage.getItem('token');\n        if (token) {\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await api.get('/auth/me');\n          if (response.data.success && response.data.user) {\n            setUser(response.data.user);\n          } else {\n            throw new Error('Invalid user data');\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n        setUser(null);\n        localStorage.removeItem('token');\n        delete api.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async credentials => {\n    // If auth is disabled, return mock success\n    if (!DEV_CONFIG.ENABLE_AUTH) {\n      setUser(DEV_CONFIG.MOCK_USER);\n      return {\n        success: true,\n        user: DEV_CONFIG.MOCK_USER\n      };\n    }\n    const response = await api.post('/auth/login', credentials);\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('token', token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    setUser(user);\n    return response.data;\n  };\n  const logout = () => {\n    // If auth is disabled, just clear user\n    if (!DEV_CONFIG.ENABLE_AUTH) {\n      setUser(null);\n      return;\n    }\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const register = async userData => {\n    // If auth is disabled, return mock success\n    if (!DEV_CONFIG.ENABLE_AUTH) {\n      setUser(DEV_CONFIG.MOCK_USER);\n      return {\n        success: true,\n        user: DEV_CONFIG.MOCK_USER\n      };\n    }\n    const response = await api.post('/auth/register', userData);\n    const {\n      token,\n      user\n    } = response.data;\n    if (token) {\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n    }\n    return response.data;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      register,\n      authEnabled: DEV_CONFIG.ENABLE_AUTH\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","DEV_CONFIG","jsxDEV","_jsxDEV","AuthContext","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUser","ENABLE_AUTH","MOCK_USER","token","localStorage","getItem","defaults","headers","common","response","get","data","success","Error","error","console","removeItem","login","credentials","post","setItem","logout","register","userData","Provider","value","authEnabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/gilbe/Downloads/Garage/AutoSaaz-Garage-Client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DEV_CONFIG from '../config/dev';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport { AuthContext };\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                // If auth is disabled in dev config, use mock user\r\n                if (!DEV_CONFIG.ENABLE_AUTH) {\r\n                    setUser(DEV_CONFIG.MOCK_USER);\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n                    const response = await api.get('/auth/me');\r\n                    if (response.data.success && response.data.user) {\r\n                        setUser(response.data.user);\r\n                    } else {\r\n                        throw new Error('Invalid user data');\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to fetch user:', error);\r\n                setUser(null);\r\n                localStorage.removeItem('token');\r\n                delete api.defaults.headers.common['Authorization'];\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    const login = async (credentials) => {\r\n        // If auth is disabled, return mock success\r\n        if (!DEV_CONFIG.ENABLE_AUTH) {\r\n            setUser(DEV_CONFIG.MOCK_USER);\r\n            return { success: true, user: DEV_CONFIG.MOCK_USER };\r\n        }\r\n\r\n        const response = await api.post('/auth/login', credentials);\r\n        const { token, user } = response.data;\r\n        localStorage.setItem('token', token);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        setUser(user);\r\n        return response.data;\r\n    };\r\n\r\n    const logout = () => {\r\n        // If auth is disabled, just clear user\r\n        if (!DEV_CONFIG.ENABLE_AUTH) {\r\n            setUser(null);\r\n            return;\r\n        }\r\n\r\n        localStorage.removeItem('token');\r\n        delete api.defaults.headers.common['Authorization'];\r\n        setUser(null);\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        // If auth is disabled, return mock success\r\n        if (!DEV_CONFIG.ENABLE_AUTH) {\r\n            setUser(DEV_CONFIG.MOCK_USER);\r\n            return { success: true, user: DEV_CONFIG.MOCK_USER };\r\n        }\r\n\r\n        const response = await api.post('/auth/register', userData);\r\n        const { token, user } = response.data;\r\n        if (token) {\r\n            localStorage.setItem('token', token);\r\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            setUser(user);\r\n        }\r\n        return response.data;\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            loading, \r\n            login, \r\n            logout, \r\n            register,\r\n            authEnabled: DEV_CONFIG.ENABLE_AUTH \r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}