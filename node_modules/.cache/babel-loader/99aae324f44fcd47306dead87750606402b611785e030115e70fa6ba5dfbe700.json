{"ast":null,"code":"import DEV_CONFIG from '../config/dev.js';\n\n// Temporary mock data (replace with real API later)\nconst mockAppointments = [{\n  id: 1,\n  customerName: 'Michael Johnson',\n  vehicle: {\n    make: 'BMW',\n    model: 'X5',\n    year: 2022\n  },\n  serviceType: 'Brake pad replacement',\n  appointmentDate: '2025-06-06T23:00:00Z',\n  status: 'confirmed',\n  priority: 'normal'\n}, {\n  id: 2,\n  customerName: 'Sarah Lee',\n  vehicle: {\n    make: 'Honda',\n    model: 'Civic',\n    year: 2021\n  },\n  serviceType: 'Oil change',\n  appointmentDate: '2025-06-07T23:00:00Z',\n  status: 'pending',\n  priority: 'high'\n}];\nconst USE_MOCKS = process.env.REACT_APP_USE_MOCKS === 'true' || !DEV_CONFIG.ENABLE_AUTH;\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport async function getAppointments(signal) {\n  if (USE_MOCKS) {\n    return new Promise(resolve => setTimeout(() => resolve(mockAppointments), 400));\n  }\n  try {\n    const token = localStorage.getItem('token');\n    const res = await fetch(`${API_BASE_URL}/appointments`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n      },\n      signal\n    });\n    if (!res.ok) throw new Error(res.statusText);\n    const json = await res.json();\n    return json.data || [];\n  } catch (e) {\n    console.warn('Appointments API failed, fallback to mocks:', e.message);\n    return mockAppointments;\n  }\n}\nexport async function getAppointmentById(id, signal) {\n  if (USE_MOCKS) {\n    return new Promise(resolve => setTimeout(() => {\n      resolve(mockAppointments.find(a => a.id === parseInt(id)) || null);\n    }, 250));\n  }\n  try {\n    const token = localStorage.getItem('token');\n    const res = await fetch(`${API_BASE_URL}/appointments/${id}`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n      },\n      signal\n    });\n    if (!res.ok) throw new Error(res.statusText);\n    const json = await res.json();\n    return json.data || null;\n  } catch (e) {\n    console.warn('Appointment detail API failed, fallback to mocks:', e.message);\n    return mockAppointments.find(a => a.id === parseInt(id)) || null;\n  }\n}\nexport async function updateAppointment(id, updateData) {\n  if (USE_MOCKS) {\n    return new Promise(resolve => setTimeout(() => {\n      const idx = mockAppointments.findIndex(a => a.id === parseInt(id));\n      if (idx !== -1) {\n        mockAppointments[idx] = {\n          ...mockAppointments[idx],\n          ...updateData\n        };\n        resolve(mockAppointments[idx]);\n      } else {\n        resolve(null);\n      }\n    }, 300));\n  }\n  try {\n    const token = localStorage.getItem('token');\n    const res = await fetch(`${API_BASE_URL}/appointments/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updateData)\n    });\n    if (!res.ok) throw new Error(res.statusText);\n    const json = await res.json();\n    return json.data || null;\n  } catch (e) {\n    console.warn('Appointment update API failed, fallback to mock update:', e.message);\n    const idx = mockAppointments.findIndex(a => a.id === parseInt(id));\n    if (idx !== -1) {\n      mockAppointments[idx] = {\n        ...mockAppointments[idx],\n        ...updateData\n      };\n      return mockAppointments[idx];\n    }\n    return null;\n  }\n}\n\n// Mapping helpers to keep UI decoupled\nexport function mapAppointment(raw) {\n  return {\n    id: raw.id,\n    customer: raw.customerName,\n    vehicleLabel: `${raw.vehicle.make} ${raw.vehicle.model} (${raw.vehicle.year})`,\n    service: raw.serviceType,\n    date: raw.appointmentDate,\n    status: raw.status,\n    // pending | confirmed | cancelled\n    priority: raw.priority // high | normal\n  };\n}\nexport function mapDetailedAppointment(raw) {\n  if (!raw) return null;\n  return {\n    ...mapAppointment(raw),\n    vehicle: raw.vehicle,\n    raw // keep original reference for future extension\n  };\n}\nexport async function acceptAppointment(id) {\n  return updateAppointment(id, {\n    status: 'confirmed'\n  });\n}\nexport async function cancelAppointment(id) {\n  return updateAppointment(id, {\n    status: 'cancelled'\n  });\n}","map":{"version":3,"names":["DEV_CONFIG","mockAppointments","id","customerName","vehicle","make","model","year","serviceType","appointmentDate","status","priority","USE_MOCKS","process","env","REACT_APP_USE_MOCKS","ENABLE_AUTH","API_BASE_URL","REACT_APP_API_URL","getAppointments","signal","Promise","resolve","setTimeout","token","localStorage","getItem","res","fetch","headers","ok","Error","statusText","json","data","e","console","warn","message","getAppointmentById","find","a","parseInt","updateAppointment","updateData","idx","findIndex","method","body","JSON","stringify","mapAppointment","raw","customer","vehicleLabel","service","date","mapDetailedAppointment","acceptAppointment","cancelAppointment"],"sources":["C:/Users/gilbe/Projects/AutoSaaz/autosaaz-garage-app/client/src/services/appointments.service.js"],"sourcesContent":["import DEV_CONFIG from '../config/dev.js';\r\n\r\n// Temporary mock data (replace with real API later)\r\nconst mockAppointments = [\r\n  {\r\n    id: 1,\r\n    customerName: 'Michael Johnson',\r\n    vehicle: { make: 'BMW', model: 'X5', year: 2022 },\r\n    serviceType: 'Brake pad replacement',\r\n    appointmentDate: '2025-06-06T23:00:00Z',\r\n    status: 'confirmed',\r\n    priority: 'normal'\r\n  },\r\n  {\r\n    id: 2,\r\n    customerName: 'Sarah Lee',\r\n    vehicle: { make: 'Honda', model: 'Civic', year: 2021 },\r\n    serviceType: 'Oil change',\r\n    appointmentDate: '2025-06-07T23:00:00Z',\r\n    status: 'pending',\r\n    priority: 'high'\r\n  }\r\n];\r\n\r\nconst USE_MOCKS = process.env.REACT_APP_USE_MOCKS === 'true' || !DEV_CONFIG.ENABLE_AUTH;\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport async function getAppointments(signal) {\r\n  if (USE_MOCKS) {\r\n    return new Promise(resolve => setTimeout(() => resolve(mockAppointments), 400));\r\n  }\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`${API_BASE_URL}/appointments`, {\r\n      headers: { 'Authorization': token ? `Bearer ${token}` : '' },\r\n      signal\r\n    });\r\n    if (!res.ok) throw new Error(res.statusText);\r\n    const json = await res.json();\r\n    return json.data || [];\r\n  } catch (e) {\r\n    console.warn('Appointments API failed, fallback to mocks:', e.message);\r\n    return mockAppointments;\r\n  }\r\n}\r\n\r\nexport async function getAppointmentById(id, signal) {\r\n  if (USE_MOCKS) {\r\n    return new Promise(resolve => setTimeout(() => {\r\n      resolve(mockAppointments.find(a => a.id === parseInt(id)) || null);\r\n    }, 250));\r\n  }\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`${API_BASE_URL}/appointments/${id}`, {\r\n      headers: { 'Authorization': token ? `Bearer ${token}` : '' },\r\n      signal\r\n    });\r\n    if (!res.ok) throw new Error(res.statusText);\r\n    const json = await res.json();\r\n    return json.data || null;\r\n  } catch (e) {\r\n    console.warn('Appointment detail API failed, fallback to mocks:', e.message);\r\n    return mockAppointments.find(a => a.id === parseInt(id)) || null;\r\n  }\r\n}\r\n\r\nexport async function updateAppointment(id, updateData) {\r\n  if (USE_MOCKS) {\r\n    return new Promise(resolve => setTimeout(() => {\r\n      const idx = mockAppointments.findIndex(a => a.id === parseInt(id));\r\n      if (idx !== -1) {\r\n        mockAppointments[idx] = { ...mockAppointments[idx], ...updateData };\r\n        resolve(mockAppointments[idx]);\r\n      } else {\r\n        resolve(null);\r\n      }\r\n    }, 300));\r\n  }\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const res = await fetch(`${API_BASE_URL}/appointments/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Authorization': token ? `Bearer ${token}` : '',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateData)\r\n    });\r\n    if (!res.ok) throw new Error(res.statusText);\r\n    const json = await res.json();\r\n    return json.data || null;\r\n  } catch (e) {\r\n    console.warn('Appointment update API failed, fallback to mock update:', e.message);\r\n    const idx = mockAppointments.findIndex(a => a.id === parseInt(id));\r\n    if (idx !== -1) {\r\n      mockAppointments[idx] = { ...mockAppointments[idx], ...updateData };\r\n      return mockAppointments[idx];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n// Mapping helpers to keep UI decoupled\r\nexport function mapAppointment(raw) {\r\n  return {\r\n    id: raw.id,\r\n    customer: raw.customerName,\r\n    vehicleLabel: `${raw.vehicle.make} ${raw.vehicle.model} (${raw.vehicle.year})`,\r\n    service: raw.serviceType,\r\n    date: raw.appointmentDate,\r\n    status: raw.status, // pending | confirmed | cancelled\r\n    priority: raw.priority // high | normal\r\n  };\r\n}\r\n\r\nexport function mapDetailedAppointment(raw) {\r\n  if (!raw) return null;\r\n  return {\r\n    ...mapAppointment(raw),\r\n    vehicle: raw.vehicle,\r\n    raw // keep original reference for future extension\r\n  };\r\n}\r\n\r\nexport async function acceptAppointment(id) {\r\n  return updateAppointment(id, { status: 'confirmed' });\r\n}\r\n\r\nexport async function cancelAppointment(id) {\r\n  return updateAppointment(id, { status: 'cancelled' });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}