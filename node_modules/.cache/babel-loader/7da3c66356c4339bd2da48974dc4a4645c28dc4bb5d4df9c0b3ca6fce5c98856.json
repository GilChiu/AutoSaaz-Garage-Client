{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { getBookings } from '../services/bookings.service.js';\n\n/**\r\n * Custom hook for fetching and managing bookings data\r\n * @returns {{ data: import('../types/booking.js').Booking[], loading: boolean, error: string|null, refetch: () => void }}\r\n */\nexport function useBookings() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const abortControllerRef = useRef(null);\n  const fetchBookings = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Cancel previous request if it exists\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n\n      // Create new abort controller\n      abortControllerRef.current = new AbortController();\n      const bookings = await getBookings(abortControllerRef.current.signal);\n      setData(bookings);\n    } catch (err) {\n      if (err.name === 'AbortError') {\n        return; // Request was cancelled, don't update state\n      }\n      setError(err.message);\n      setData([]); // Clear data on error\n    } finally {\n      setLoading(false);\n      abortControllerRef.current = null;\n    }\n  };\n  useEffect(() => {\n    fetchBookings();\n\n    // Cleanup function to abort request on unmount\n    return () => {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n    };\n  }, []);\n  const refetch = () => {\n    fetchBookings();\n  };\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n}\n_s(useBookings, \"dWuPqw41ZbAxVyZopnZcBO8it2w=\");","map":{"version":3,"names":["useState","useEffect","useRef","getBookings","useBookings","_s","data","setData","loading","setLoading","error","setError","abortControllerRef","fetchBookings","current","abort","AbortController","bookings","signal","err","name","message","refetch"],"sources":["C:/Users/gilbe/Downloads/Garage/AutoSaaz-Garage-Client/src/hooks/useBookings.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { getBookings } from '../services/bookings.service.js';\r\n\r\n/**\r\n * Custom hook for fetching and managing bookings data\r\n * @returns {{ data: import('../types/booking.js').Booking[], loading: boolean, error: string|null, refetch: () => void }}\r\n */\r\nexport function useBookings() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const abortControllerRef = useRef(null);\r\n\r\n  const fetchBookings = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Cancel previous request if it exists\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n\r\n      // Create new abort controller\r\n      abortControllerRef.current = new AbortController();\r\n\r\n      const bookings = await getBookings(abortControllerRef.current.signal);\r\n      setData(bookings);\r\n    } catch (err) {\r\n      if (err.name === 'AbortError') {\r\n        return; // Request was cancelled, don't update state\r\n      }\r\n      setError(err.message);\r\n      setData([]); // Clear data on error\r\n    } finally {\r\n      setLoading(false);\r\n      abortControllerRef.current = null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n\r\n    // Cleanup function to abort request on unmount\r\n    return () => {\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const refetch = () => {\r\n    fetchBookings();\r\n  };\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,iCAAiC;;AAE7D;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMY,kBAAkB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,IAAIC,kBAAkB,CAACE,OAAO,EAAE;QAC9BF,kBAAkB,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;MACpC;;MAEA;MACAH,kBAAkB,CAACE,OAAO,GAAG,IAAIE,eAAe,CAAC,CAAC;MAElD,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACS,kBAAkB,CAACE,OAAO,CAACI,MAAM,CAAC;MACrEX,OAAO,CAACU,QAAQ,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;QAC7B,OAAO,CAAC;MACV;MACAT,QAAQ,CAACQ,GAAG,CAACE,OAAO,CAAC;MACrBd,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;MACjBG,kBAAkB,CAACE,OAAO,GAAG,IAAI;IACnC;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;;IAEf;IACA,OAAO,MAAM;MACX,IAAID,kBAAkB,CAACE,OAAO,EAAE;QAC9BF,kBAAkB,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpBT,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,OAAO;IACLP,IAAI;IACJE,OAAO;IACPE,KAAK;IACLY;EACF,CAAC;AACH;AAACjB,EAAA,CAtDeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}